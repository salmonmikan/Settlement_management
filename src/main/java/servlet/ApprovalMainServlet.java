package servlet;

import java.io.IOException;
import java.util.List;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

import dao.ApplicationDAO;
import model.Application;

/**
 * 承認者向けに申請一覧を表示するサーブレット。
 * 承認対象の申請情報を取得し、一覧画面に表示する。
 * 【Generated by ChatGPT】
 */
@WebServlet("/approverApplications")
public class ApprovalMainServlet extends HttpServlet {
	/**
	 * 承認者のIDに紐づく申請情報を取得し、申請一覧画面にフォワードする。
	 * 【Generated by ChatGPT】
	 *
	 * @param request  HTTPリクエスト
	 * @param response HTTPレスポンス
	 * @throws ServletException サーブレット例外
	 * @throws IOException      入出力例外
	 */
	@Override
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		HttpSession session = request.getSession();
		String approverId = (String) session.getAttribute("staffId");

		try {
			ApplicationDAO dao = new ApplicationDAO();

			String approver_depId = dao.findApproverDepartment(approverId);
			List<Application> applications = dao.getApplicationsByDepartment(approver_depId);
			//            List<Application> applications = dao.getApplicationsByApprover(approverId);
			request.setAttribute("applications", applications);
		} catch (Exception e) {
			e.printStackTrace();
			request.setAttribute("applications", new java.util.ArrayList<Application>());
		}

		request.getRequestDispatcher("/WEB-INF/views/approvalMain.jsp").forward(request, response);
	}

	@Override
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
	        throws ServletException, IOException {

	    HttpSession session = request.getSession();
	    String approverId = (String) session.getAttribute("staffId");
	    String[] appIds = request.getParameterValues("appIds");  // チェックされた申請ID
	    String action = request.getParameter("action");

	    if (approverId == null || appIds == null || appIds.length == 0 || action == null) {
	        request.setAttribute("errorMsg", "申請が選択されていません。");
	        request.getRequestDispatcher("/WEB-INF/views/approvalMain.jsp").forward(request, response);
	        return;
	    }

	    try {
	        ApplicationDAO dao = new ApplicationDAO();

	        switch (action) {
	            case "submit":
	                for (String idStr : appIds) {
	                    int appId = Integer.parseInt(idStr);
	                    dao.updateStatus(appId, approverId); // 例: ステータスを「承認済」に更新
	                }
	                session.setAttribute("success", true);
	                break;

	            case "reject":
	                // 差戻し処理
	                try {
//	                    ApplicationDAO dao = new ApplicationDAO();
	                    for (String idStr : appIds) {
	                        int appId = Integer.parseInt(idStr);
	                        dao.rejectApplication(appId); // 差戻し処理メソッドを呼び出し
	                    }
	                    session.setAttribute("success", "選択された申請を差戻しました。");
	                } catch (Exception e) {
	                    e.printStackTrace();
	                    session.setAttribute("errorMsg", "差戻し中にエラーが発生しました。");
	                }
	                response.sendRedirect("approverApplications");
	                return;

	            case "delete":
	                for (String idStr : appIds) {
	                    int appId = Integer.parseInt(idStr);
	                    dao.deleteApplication(appId);
	                }
	                session.setAttribute("success", "選択された申請を削除しました。");
	                break;

	            default:
	                request.setAttribute("errorMsg", "不明な操作が指定されました。");
	                request.getRequestDispatcher("/WEB-INF/views/approvalMain.jsp").forward(request, response);
	                return;
	        }
	    } catch (Exception e) {
	        e.printStackTrace();
	        request.setAttribute("errorMsg", "操作中にエラーが発生しました。");
	        request.getRequestDispatcher("/WEB-INF/views/approvalMain.jsp").forward(request, response);
	        return;
	    }

	    // 正常終了 → 一覧ページへリダイレクト
	    response.sendRedirect("approverApplications");
	}
}